---
- name: Configure an AWS IAM account for certificate management
  hosts: hub
  module_defaults:
    group/k8s:
      kubeconfig: '{{ kubeconfig }}'
  vars:
    cert_manager_vars: '{{ lookup("first_found", download_dir + "/certmanager-access-key.yml", errors="ignore") }}'
  tasks:
  - name: Apply a CertManager subscription to the hub
    kubernetes.core.k8s:
      state: present
      src: cert-manager-subscription.yml

  - name: Read any existing keys
    ansible.builtin.include_vars:
      file: "{{ cert_manager_vars }}"
      name: cert_manager
    when: cert_manager_vars != ""

  - name: Create a certmanager IAM user
    amazon.aws.iam_user:
      state: present
      name: certmanager

  - name: Create an access key for the certmanager user
    community.aws.iam_access_key:
      state: present
      user_name: certmanager
      id: '{{ cert_manager.access_key|default(omit) }}'
    register: cert_manager_access_key

  - name: Record the access key and secret
    ansible.builtin.template:
      state: present
      src: certmanager-access-key.yml.j2
      dest: '{{ download_dir }}/certmanager-access-key.yml'
    when: cert_manager_access_key.changed
    register: cert_manager_key_recorded

  - name: Read updated vars
    ansible.builtin.include_vars:
      file: "{{ cert_manager_vars }}"
      name: cert_manager
    when: cert_manager_key_recorded.changed

  - name: Recover the hosted zone ID
    amazon.aws.route53_zone:
      state: present
      zone: '{{ base_domain }}'
    register: hosted_zone

  - name: Define policy to allow editing the hosted zone
    amazon.aws.iam_policy:
      state: present
      iam_type: user
      iam_name: certmanager
      policy_name: certmanager_{{ base_domain.replace('.', '_') }}
      policy_json: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "ListAll",
              "Effect": "Allow",
              "Action": [
                "route53:GetChange",
                "route53:ListHostedZones",
                "route53:GetHostedZoneCount",
                "route53:ListHostedZonesByName"
              ],
              "Resource": "*"
            },
            {
              "Sid": "EditHostedZone",
              "Effect": "Allow",
              "Action": [
                  "route53:GetHostedZone",
                  "route53:ChangeResourceRecordSets",
                  "route53:ListResourceRecordSets"
              ],
              "Resource": "arn:aws:route53:::hostedzone/{{ hosted_zone.zone_id }}"
            }
          ]
        }

  - name: Define the ClusterIssuer for cert-manager
    kubernetes.core.k8s:
      state: present
      template: clusterissuer.yml.j2

  - name: Create the Certificates for SNO cluster ingress
    kubernetes.core.k8s:
      state: present
      template: cluster-certificates.yml.j2
    vars:
      sno_clusters: '{{ sno_clusters_yaml|from_yaml }}'
